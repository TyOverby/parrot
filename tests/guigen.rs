extern crate parrot;
use parrot::geom::*;

#[test]
fn test_1363c1555a8c28be710dbf2e5f9c593d2300edf4() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(469.00000000000000000000, 347.00000000000000000000), Point(469.00000000000000000000, 426.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(469.00000000000000000000, 378.79998779296875000000)), 0.0000001f32));
}
#[test]
fn test_e9ad9f12cd4db2a2cba006b0f046fd1bbb95d27a() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(468.00000000000000000000, 428.00000000000000000000), Point(470.00000000000000000000, 341.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(469.13098144531250000000, 378.80328369140625000000)), 0.0000001f32));
}
#[test]
fn test_8f0b66dd77c1bed842d08c2638b091dc1a5373f6() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(676.00000000000000000000, 348.00000000000000000000), Point(676.00000000000000000000, 426.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(676.00000000000000000000, 383.97500610351562500000)), 0.0000001f32));
}
#[test]
fn test_64ca449535f94895e954ba2a2ca2f72a94988e08() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(676.00000000000000000000, 431.00000000000000000000), Point(681.00000000000000000000, 346.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(678.76208496093750000000, 384.04406738281250000000)), 0.0000001f32));
}
#[test]
fn test_8dad2a059a427dfd5f2e0858de8fe2199cea0230() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(571.00000000000000000000, 338.00000000000000000000), Point(571.00000000000000000000, 418.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(571.00000000000000000000, 381.35000610351562500000)), 0.0000001f32));
}
#[test]
fn test_f09eed6ba2b2d8aa9c0c13e3afcd96fcddf7d775() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(571.00000000000000000000, 440.00000000000000000000), Point(571.00000000000000000000, 338.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(571.00000000000000000000, 381.35000610351562500000)), 0.0000001f32));
}
#[test]
fn test_c623572bdd66b376bdfdbf515dbbc86b1792972a() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(373.00000000000000000000, 414.00000000000000000000), Point(376.00000000000000000000, 323.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_47b2ebef40ee1053e39c65f36d8e90f376a7ce21() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(372.00000000000000000000, 324.00000000000000000000), Point(378.00000000000000000000, 413.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_4b284e81ed74545acdeedc6a94ebd1194c5f84de() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(774.00000000000000000000, 436.00000000000000000000), Point(780.00000000000000000000, 330.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_d6b71c62967b43e1714d5e633236dcc80bbfa518() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(776.00000000000000000000, 320.00000000000000000000), Point(774.00000000000000000000, 438.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_f00c2894f3ba358d259889faf5213e502b0bcd0d() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(488.00000000000000000000, 334.00000000000000000000), Point(487.00000000000000000000, 418.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(487.45214843750000000000, 380.02020263671875000000)), 0.0000001f32));
}
#[test]
fn test_335d0f42cc72d66b77bb138d6030cc4036a5e983() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(492.00000000000000000000, 424.00000000000000000000), Point(492.00000000000000000000, 338.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(492.00000000000000000000, 380.15109252929687500000)), 0.0000001f32));
}
#[test]
fn test_ee98948877cdb08313c943ea98d2433dc4096c28() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(687.00000000000000000000, 441.00000000000000000000), Point(690.00000000000000000000, 345.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(688.72460937500000000000, 385.81222534179687500000)), 0.0000001f32));
}
#[test]
fn test_f617165526b5ac4123a13abd3bf15c6b8252dfd4() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(690.00000000000000000000, 347.00000000000000000000), Point(690.00000000000000000000, 415.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(690.00000000000000000000, 385.84890747070312500000)), 0.0000001f32));
}
#[test]
fn test_4a1d3cb962d90574ea998bb420c4d68753fa27a2() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(589.00000000000000000000, 447.00000000000000000000), Point(585.00000000000000000000, 349.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(586.38232421875000000000, 382.86712646484375000000)), 0.0000001f32));
}
#[test]
fn test_39550c263e4511c6887433ec3c08910fa93bfdf8() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(588.00000000000000000000, 332.00000000000000000000), Point(589.00000000000000000000, 442.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(588.46295166015625000000, 382.92700195312500000000)), 0.0000001f32));
}
#[test]
fn test_a7aefe8d5c432c31e3fbabd3f6b367d00609765e() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(382.00000000000000000000, 446.00000000000000000000), Point(386.00000000000000000000, 315.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_c91ec33f7538274e480375fa335aea6efc4582fe() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(382.00000000000000000000, 295.00000000000000000000), Point(382.00000000000000000000, 444.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_3f7d33e82b927bb253ec35722e146a5584b5cef5() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(803.00000000000000000000, 458.00000000000000000000), Point(803.00000000000000000000, 319.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_ff828b94a9529a0a626a78bf5846c6ef69ff29fa() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(805.00000000000000000000, 306.00000000000000000000), Point(803.00000000000000000000, 458.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_253f94921843cee58e0e2cb12fcbc4d31a82f92f() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(869.00000000000000000000, 288.00000000000000000000), Point(673.00000000000000000000, 204.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_b76823885c1f7677b33be04cecb00779a9f1abfa() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(885.00000000000000000000, 451.00000000000000000000), Point(693.00000000000000000000, 541.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_2caea59d2502be2866abfca9a880c0d588bafbd4() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(317.00000000000000000000, 438.00000000000000000000), Point(507.00000000000000000000, 521.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_f08892cccae147c0012ae3eb9c85db3d010356ae() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(315.00000000000000000000, 292.00000000000000000000), Point(522.00000000000000000000, 228.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_d028da49a18a1a426572959ef68d85a1cbaf4a2e() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(363.00000000000000000000, 457.00000000000000000000), Point(736.00000000000000000000, 471.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(433.09216308593750000000, 459.63079833984375000000), Point(678.43981933593750000000, 468.83956909179687500000)), 0.0000001f32));
}
#[test]
fn test_fa2a0ef263c8bfde7b8b4f13b778902b402a18b5() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(547.00000000000000000000, 285.00000000000000000000), Point(600.00000000000000000000, 638.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(554.52062988281250000000, 335.09024047851562500000), Point(590.67993164062500000000, 575.92498779296875000000)), 0.0000001f32));
}
#[test]
fn test_50a1ed89e61d68698640e576fbca1b8bded7b7a2() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(334.00000000000000000000, 381.00000000000000000000), Point(725.00000000000000000000, 527.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(439.03164672851562500000, 420.21899414062500000000), Point(669.10461425781250000000, 506.12857055664062500000)), 0.0000001f32));
}
#[test]
fn test_0b1aff765d8eafc9aa053b0249602b64c28bdd26() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(869.00000000000000000000, 356.00000000000000000000), Point(869.00000000000000000000, 644.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_67bbb68472f872234572f4d254848b897493d139() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(722.00000000000000000000, 654.00000000000000000000), Point(386.00000000000000000000, 667.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_f472404c433bc8477e7d1de3f26930b8c70a6056() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(291.00000000000000000000, 367.00000000000000000000), Point(291.00000000000000000000, 587.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_40f5ecbc4517930f057a724e24eb1af3f9e1946f() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(723.00000000000000000000, 219.00000000000000000000), Point(421.00000000000000000000, 217.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
