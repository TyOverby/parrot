extern crate parrot;
use parrot::geom::*;

#[test]
fn test_1363c1555a8c28be710dbf2e5f9c593d2300edf4() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(469.00000000000000000000, 347.00000000000000000000), Point(469.00000000000000000000, 426.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(469.00000000000000000000, 378.79998779296875000000)), 0.0000001f32));
}
#[test]
fn test_e9ad9f12cd4db2a2cba006b0f046fd1bbb95d27a() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(468.00000000000000000000, 428.00000000000000000000), Point(470.00000000000000000000, 341.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(469.13098144531250000000, 378.80328369140625000000)), 0.0000001f32));
}
#[test]
fn test_8f0b66dd77c1bed842d08c2638b091dc1a5373f6() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(676.00000000000000000000, 348.00000000000000000000), Point(676.00000000000000000000, 426.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(676.00000000000000000000, 383.97500610351562500000)), 0.0000001f32));
}
#[test]
fn test_64ca449535f94895e954ba2a2ca2f72a94988e08() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(676.00000000000000000000, 431.00000000000000000000), Point(681.00000000000000000000, 346.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(678.76208496093750000000, 384.04406738281250000000)), 0.0000001f32));
}
#[test]
fn test_8dad2a059a427dfd5f2e0858de8fe2199cea0230() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(571.00000000000000000000, 338.00000000000000000000), Point(571.00000000000000000000, 418.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(571.00000000000000000000, 381.35000610351562500000)), 0.0000001f32));
}
#[test]
fn test_f09eed6ba2b2d8aa9c0c13e3afcd96fcddf7d775() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(571.00000000000000000000, 440.00000000000000000000), Point(571.00000000000000000000, 338.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(571.00000000000000000000, 381.35000610351562500000)), 0.0000001f32));
}
#[test]
fn test_c623572bdd66b376bdfdbf515dbbc86b1792972a() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(373.00000000000000000000, 414.00000000000000000000), Point(376.00000000000000000000, 323.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_47b2ebef40ee1053e39c65f36d8e90f376a7ce21() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(372.00000000000000000000, 324.00000000000000000000), Point(378.00000000000000000000, 413.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_4b284e81ed74545acdeedc6a94ebd1194c5f84de() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(774.00000000000000000000, 436.00000000000000000000), Point(780.00000000000000000000, 330.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_d6b71c62967b43e1714d5e633236dcc80bbfa518() {
    assert!(LineSegment(Point(717.00000000000000000000, 385.00000000000000000000), Point(437.00000000000000000000, 378.00000000000000000000)).intersects(LineSegment(Point(776.00000000000000000000, 320.00000000000000000000), Point(774.00000000000000000000, 438.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_f00c2894f3ba358d259889faf5213e502b0bcd0d() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(488.00000000000000000000, 334.00000000000000000000), Point(487.00000000000000000000, 418.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(487.45214843750000000000, 380.02020263671875000000)), 0.0000001f32));
}
#[test]
fn test_335d0f42cc72d66b77bb138d6030cc4036a5e983() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(492.00000000000000000000, 424.00000000000000000000), Point(492.00000000000000000000, 338.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(492.00000000000000000000, 380.15109252929687500000)), 0.0000001f32));
}
#[test]
fn test_ee98948877cdb08313c943ea98d2433dc4096c28() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(687.00000000000000000000, 441.00000000000000000000), Point(690.00000000000000000000, 345.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(688.72460937500000000000, 385.81222534179687500000)), 0.0000001f32));
}
#[test]
fn test_f617165526b5ac4123a13abd3bf15c6b8252dfd4() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(690.00000000000000000000, 347.00000000000000000000), Point(690.00000000000000000000, 415.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(690.00000000000000000000, 385.84890747070312500000)), 0.0000001f32));
}
#[test]
fn test_4a1d3cb962d90574ea998bb420c4d68753fa27a2() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(589.00000000000000000000, 447.00000000000000000000), Point(585.00000000000000000000, 349.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(586.38232421875000000000, 382.86712646484375000000)), 0.0000001f32));
}
#[test]
fn test_39550c263e4511c6887433ec3c08910fa93bfdf8() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(588.00000000000000000000, 332.00000000000000000000), Point(589.00000000000000000000, 442.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(588.46295166015625000000, 382.92700195312500000000)), 0.0000001f32));
}
#[test]
fn test_a7aefe8d5c432c31e3fbabd3f6b367d00609765e() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(382.00000000000000000000, 446.00000000000000000000), Point(386.00000000000000000000, 315.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_c91ec33f7538274e480375fa335aea6efc4582fe() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(382.00000000000000000000, 295.00000000000000000000), Point(382.00000000000000000000, 444.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_3f7d33e82b927bb253ec35722e146a5584b5cef5() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(803.00000000000000000000, 458.00000000000000000000), Point(803.00000000000000000000, 319.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_ff828b94a9529a0a626a78bf5846c6ef69ff29fa() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(805.00000000000000000000, 306.00000000000000000000), Point(803.00000000000000000000, 458.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_253f94921843cee58e0e2cb12fcbc4d31a82f92f() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(869.00000000000000000000, 288.00000000000000000000), Point(673.00000000000000000000, 204.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_b76823885c1f7677b33be04cecb00779a9f1abfa() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(885.00000000000000000000, 451.00000000000000000000), Point(693.00000000000000000000, 541.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_2caea59d2502be2866abfca9a880c0d588bafbd4() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(317.00000000000000000000, 438.00000000000000000000), Point(507.00000000000000000000, 521.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_f08892cccae147c0012ae3eb9c85db3d010356ae() {
    assert!(LineSegment(Point(452.00000000000000000000, 379.00000000000000000000), Point(730.00000000000000000000, 387.00000000000000000000)).intersects(LineSegment(Point(315.00000000000000000000, 292.00000000000000000000), Point(522.00000000000000000000, 228.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_d028da49a18a1a426572959ef68d85a1cbaf4a2e() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(363.00000000000000000000, 457.00000000000000000000), Point(736.00000000000000000000, 471.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(433.09216308593750000000, 459.63079833984375000000), Point(678.43981933593750000000, 468.83956909179687500000)), 0.0000001f32));
}
#[test]
fn test_fa2a0ef263c8bfde7b8b4f13b778902b402a18b5() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(547.00000000000000000000, 285.00000000000000000000), Point(600.00000000000000000000, 638.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(554.52062988281250000000, 335.09024047851562500000), Point(590.67993164062500000000, 575.92498779296875000000)), 0.0000001f32));
}
#[test]
fn test_50a1ed89e61d68698640e576fbca1b8bded7b7a2() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(334.00000000000000000000, 381.00000000000000000000), Point(725.00000000000000000000, 527.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(439.03164672851562500000, 420.21899414062500000000), Point(669.10461425781250000000, 506.12857055664062500000)), 0.0000001f32));
}
#[test]
fn test_0b1aff765d8eafc9aa053b0249602b64c28bdd26() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(869.00000000000000000000, 356.00000000000000000000), Point(869.00000000000000000000, 644.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_67bbb68472f872234572f4d254848b897493d139() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(722.00000000000000000000, 654.00000000000000000000), Point(386.00000000000000000000, 667.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_f472404c433bc8477e7d1de3f26930b8c70a6056() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(291.00000000000000000000, 367.00000000000000000000), Point(291.00000000000000000000, 587.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_40f5ecbc4517930f057a724e24eb1af3f9e1946f() {
    assert!(Circle(Point(556.00000000000000000000, 458.00000000000000000000), 122.91867065429687500000).intersects(LineSegment(Point(723.00000000000000000000, 219.00000000000000000000), Point(421.00000000000000000000, 217.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_82658b60469857a2995abf41c6fe2a8ac7e0187d() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(636.00000000000000000000, 501.00000000000000000000), Point(582.00000000000000000000, 672.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(599.47918701171875000000, 616.64923095703125000000)), 0.0000001f32));
}
#[test]
fn test_c14cd2307b561a0b72e6817385e61608ed8cad98() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(569.00000000000000000000, 474.00000000000000000000), Point(412.00000000000000000000, 458.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(486.19418334960937500000, 465.56118774414062500000)), 0.0000001f32));
}
#[test]
fn test_0bda4ab7bb305c22da3dc0b0fb241ee81a7deeb6() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(810.00000000000000000000, 550.00000000000000000000), Point(690.00000000000000000000, 704.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_13700e3391e885f704edb7be6d8eadf0c45af821() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(428.00000000000000000000, 514.00000000000000000000), Point(564.00000000000000000000, 693.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_2efa9b3c83488eb529f58c8c69a68d863ecb8158() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(568.00000000000000000000, 282.00000000000000000000), Point(432.00000000000000000000, 463.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_1cf32f238f7317970214a4f88d9aff9e76d46200() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(840.00000000000000000000, 382.00000000000000000000), Point(682.00000000000000000000, 274.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_bc60a2bb657db28d157836a46105c92198aea117() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(646.00000000000000000000, 425.00000000000000000000), Point(664.00000000000000000000, 303.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(658.51104736328125000000, 340.20285034179687500000)), 0.0000001f32));
}
#[test]
fn test_26cee38e215c14cdd17dd5a16d346a53f8f77535() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(642.00000000000000000000, 462.00000000000000000000), Point(808.00000000000000000000, 414.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(759.25195312500000000000, 428.09582519531250000000)), 0.0000001f32));
}
#[test]
fn test_54cd0da263cb471a1ae977db0c6c1ab645b530c0() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(639.00000000000000000000, 500.00000000000000000000), Point(844.00000000000000000000, 621.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(741.69744873046875000000, 560.61657714843750000000)), 0.0000001f32));
}
#[test]
fn test_bc3e1e9eab74cb8bbe2ab8bed5b68e800447711c() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(552.00000000000000000000, 505.00000000000000000000), Point(428.00000000000000000000, 522.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(490.17016601562500000000, 513.47668457031250000000)), 0.0000001f32));
}
#[test]
fn test_35ab1a5113ce45daa771258450b7fe5553bf2e95() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(577.00000000000000000000, 438.00000000000000000000), Point(454.00000000000000000000, 381.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(505.91851806640625000000, 405.05981445312500000000)), 0.0000001f32));
}
#[test]
fn test_be90bb2e079cb0be0592b5d277ecb3d22fe16f03() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(607.00000000000000000000, 467.00000000000000000000), Point(598.00000000000000000000, 269.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(601.18286132812500000000, 339.02346801757812500000)), 0.0000001f32));
}
#[test]
fn test_c1aaf0f9ad76ca2e08d4b431d1daf942c2092b9a() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(670.00000000000000000000, 461.00000000000000000000), Point(568.00000000000000000000, 511.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_babe0d952a3bf194252d99680bf58cebcee169ec() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(567.00000000000000000000, 427.00000000000000000000), Point(647.00000000000000000000, 521.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_aefd2bbcef16361723d30df200b56abfa133f5bf() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(585.00000000000000000000, 382.00000000000000000000), Point(537.00000000000000000000, 443.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_1901537ffae65bbc3553d1c99fdd96d6f5b5bef4() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(713.00000000000000000000, 424.00000000000000000000), Point(650.00000000000000000000, 378.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_c14250de51a20fe8cc8f45306dc5f0d4da7d6b74() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(672.00000000000000000000, 551.00000000000000000000), Point(719.00000000000000000000, 486.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_50092ad49f2ac4a969251796823d92c39eae84fd() {
    assert!(Circle(Point(627.00000000000000000000, 478.00000000000000000000), 141.35417175292968750000).intersects(LineSegment(Point(532.00000000000000000000, 483.00000000000000000000), Point(594.00000000000000000000, 567.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_c2a5cbd687bdf59230600626efa241889193cdc8() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(908.00000000000000000000, 244.00000000000000000000), Point(515.00000000000000000000, 636.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(807.32910156250000000000, 344.41473388671875000000), Point(560.12390136718750000000, 590.99096679687500000000)), 0.0000001f32));
}
#[test]
fn test_09e8d97e75ccd341ba9bad5935d108912c065714() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(928.00000000000000000000, 631.00000000000000000000), Point(503.00000000000000000000, 317.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(842.61431884765625000000, 567.91503906250000000000), Point(562.14331054687500000000, 360.69644165039062500000)), 0.0000001f32));
}
#[test]
fn test_ee3298fdcf5331cc4be30c3abc1e7523b82198ee() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(921.00000000000000000000, 481.00000000000000000000), Point(428.00000000000000000000, 480.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(868.02813720703125000000, 480.89254760742187500000), Point(517.95751953125000000000, 480.18246459960937500000)), 0.0000001f32));
}
#[test]
fn test_fa338c37e78300ecc9339515bb132afafd84dff4() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(543.00000000000000000000, 676.00000000000000000000), Point(830.00000000000000000000, 266.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(585.54785156250000000000, 615.21734619140625000000), Point(786.08972167968750000000, 328.72897338867187500000)), 0.0000001f32));
}
#[test]
fn test_50ba4155ded3c8a4a2e2287da4389f51d30ed7cc() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(894.00000000000000000000, 630.00000000000000000000), Point(494.00000000000000000000, 314.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(833.14550781250000000000, 581.92492675781250000000), Point(558.48730468750000000000, 364.94494628906250000000)), 0.0000001f32));
}
#[test]
fn test_57239b0b5fddc1a57b53898a87d34aab77670aff() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(736.00000000000000000000, 216.00000000000000000000), Point(684.00000000000000000000, 385.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(709.32568359375000000000, 302.69146728515625000000)), 0.0000001f32));
}
#[test]
fn test_f0de7d592580dd5f870342a6079baa31166cd3d4() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(961.00000000000000000000, 373.00000000000000000000), Point(790.00000000000000000000, 430.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(854.16192626953125000000, 408.61267089843750000000)), 0.0000001f32));
}
#[test]
fn test_4ff31fcb9eb7349b8141ffa16f063a0339684b83() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(931.00000000000000000000, 667.00000000000000000000), Point(766.00000000000000000000, 476.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(843.75622558593750000000, 566.00872802734375000000)), 0.0000001f32));
}
#[test]
fn test_e9820f17afd4540f5fcae309b4431f17a99b46ee() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(622.00000000000000000000, 741.00000000000000000000), Point(622.00000000000000000000, 575.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(622.00000000000000000000, 637.02813720703125000000)), 0.0000001f32));
}
#[test]
fn test_c41f7bb7d184b9a3f07dcdb546fa7177f427b482() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(403.00000000000000000000, 504.00000000000000000000), Point(588.00000000000000000000, 517.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(521.53033447265625000000, 512.32916259765625000000)), 0.0000001f32));
}
#[test]
fn test_b9aa62e434ed59ca2c9a3b3d4e01e64f46b1f96b() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(548.00000000000000000000, 671.00000000000000000000), Point(579.00000000000000000000, 312.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(555.40478515625000000000, 585.24768066406250000000), Point(575.99780273437500000000, 346.76757812500000000000)), 0.0000001f32));
}
#[test]
fn test_d3e1464ff970a7ebcda02897bffe1c2f58a513e8() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(789.00000000000000000000, 264.00000000000000000000), Point(844.00000000000000000000, 643.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(799.77655029296875000000, 338.26007080078125000000), Point(834.80895996093750000000, 579.66552734375000000000)), 0.0000001f32));
}
#[test]
fn test_f112d3cd62fd543c32563d896ef80800e4a81d3f() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(480.00000000000000000000, 368.00000000000000000000), Point(879.00000000000000000000, 341.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(560.51782226562500000000, 362.55142211914062500000), Point(808.85571289062500000000, 345.74661254882812500000)), 0.0000001f32));
}
#[test]
fn test_c45a2811234b279ac2b2f88f107281b3da57c63c() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(889.00000000000000000000, 615.00000000000000000000), Point(524.00000000000000000000, 604.00000000000000000000))).almost_eq_epsilon(Intersections::Two(Point(803.93676757812500000000, 612.43646240234375000000), Point(574.10864257812500000000, 605.51013183593750000000)), 0.0000001f32));
}
#[test]
fn test_4442ad3df6db0ccce2bc165b292623e7b2f2e4ee() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(709.00000000000000000000, 513.00000000000000000000), Point(673.00000000000000000000, 409.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_c73da804a7a2075071df1470b6d6750811347ba3() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(619.00000000000000000000, 481.00000000000000000000), Point(810.00000000000000000000, 486.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_1b7dac23e138a848fcb94524581d6859810fe242() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(747.00000000000000000000, 408.00000000000000000000), Point(615.00000000000000000000, 549.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_56464532d86740945a9aab4374fdb2552a604f20() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(741.00000000000000000000, 382.00000000000000000000), Point(597.00000000000000000000, 390.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_dc4b9e687586ac5a91c2ea8d3c137ebc831b33ea() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(774.00000000000000000000, 581.00000000000000000000), Point(634.00000000000000000000, 590.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_01e649591c506304ecbc510e4372c020c045e775() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(802.00000000000000000000, 407.00000000000000000000), Point(807.00000000000000000000, 540.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_8b001f813704a91d4027612479d7922830511af0() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(589.00000000000000000000, 441.00000000000000000000), Point(589.00000000000000000000, 544.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_b4cd90d868520b7a99a536437444d891a65f7cbc() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(622.00000000000000000000, 565.00000000000000000000), Point(532.00000000000000000000, 629.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(570.23254394531250000000, 601.81243896484375000000)), 0.0000001f32));
}
#[test]
fn test_f0c18df876aa6812504e1bafff84489d4504ac9a() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(607.00000000000000000000, 513.00000000000000000000), Point(461.00000000000000000000, 525.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(523.26171875000000000000, 519.88256835937500000000)), 0.0000001f32));
}
#[test]
fn test_6ebe7baccc8bb17020906c94dc6e572defb12298() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(622.00000000000000000000, 440.00000000000000000000), Point(471.00000000000000000000, 350.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(540.32696533203125000000, 391.32070922851562500000)), 0.0000001f32));
}
#[test]
fn test_11b2bd4f99d3540d73bfb52888f1739c94c770a8() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(679.00000000000000000000, 387.00000000000000000000), Point(634.00000000000000000000, 259.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(650.89831542968750000000, 307.06634521484375000000)), 0.0000001f32));
}
#[test]
fn test_d044a73c2f304f82ee0f0411e3b61d4723a8a844() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(769.00000000000000000000, 395.00000000000000000000), Point(880.00000000000000000000, 301.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(817.50659179687500000000, 353.92236328125000000000)), 0.0000001f32));
}
#[test]
fn test_69646d593f0a585698e2b3bd3ce2cc8a09f4edc1() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(810.00000000000000000000, 444.00000000000000000000), Point(953.00000000000000000000, 442.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(864.78430175781250000000, 443.23379516601562500000)), 0.0000001f32));
}
#[test]
fn test_8853f5092eadc8d32d1e7751afbc4b0ff6dcaac9() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(734.00000000000000000000, 512.00000000000000000000), Point(911.00000000000000000000, 571.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(851.57379150390625000000, 551.19128417968750000000)), 0.0000001f32));
}
#[test]
fn test_6428ff1358b194da5ffe78c998bf24d5a4b78cdc() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(703.00000000000000000000, 548.00000000000000000000), Point(820.00000000000000000000, 700.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(769.54473876953125000000, 634.45129394531250000000)), 0.0000001f32));
}
#[test]
fn test_78884fe675d86a3bc41b4e7f6526a02d44357597() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(690.00000000000000000000, 605.00000000000000000000), Point(667.00000000000000000000, 706.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(679.40124511718750000000, 651.54248046875000000000)), 0.0000001f32));
}
#[test]
fn test_5756277c3b773859885185563d3e9672a0ec160b() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(641.00000000000000000000, 562.00000000000000000000), Point(525.00000000000000000000, 639.00000000000000000000))).almost_eq_epsilon(Intersections::One(Point(574.67138671875000000000, 606.02844238281250000000)), 0.0000001f32));
}
#[test]
fn test_5f014e0e6d98dc6b6a6dc7a7d3a442f24536946f() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(466.00000000000000000000, 379.00000000000000000000), Point(462.00000000000000000000, 622.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_c8b9d5faf14d924b9b10d64b5cb4fe850d7e7a93() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(764.00000000000000000000, 718.00000000000000000000), Point(613.00000000000000000000, 719.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_8eec8d01aefcb4150d37ea280986ce683dd511b7() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(950.00000000000000000000, 526.00000000000000000000), Point(887.00000000000000000000, 664.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_96bbb0df41189068a288965eb4ef2463242c523a() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(931.00000000000000000000, 395.00000000000000000000), Point(931.00000000000000000000, 537.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_48913175d415d406b811f67f4752d8feabb55408() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(809.00000000000000000000, 274.00000000000000000000), Point(931.00000000000000000000, 395.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_9ab6cfa5b68a9271cc0e59bac0fb3cff3064beb6() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(596.00000000000000000000, 258.00000000000000000000), Point(815.00000000000000000000, 268.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
#[test]
fn test_36576374f9a6238220c513f4eccbe5c49980f791() {
    assert!(Circle(Point(693.00000000000000000000, 477.00000000000000000000), 175.07141113281250000000).intersects(LineSegment(Point(484.00000000000000000000, 349.00000000000000000000), Point(601.00000000000000000000, 229.00000000000000000000))).almost_eq_epsilon(Intersections::None, 0.0000001f32));
}
